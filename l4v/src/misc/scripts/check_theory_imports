#!/bin/bash
# Copyright 2016, NICTA
#
# This software may be distributed and modified according to the terms of
# the BSD 2-Clause license. Note that NO WARRANTY is provided.
# See "LICENSE_BSD2.txt" for details.
#
# @TAG(NICTA_BSD)

# Check theory import paths in all theory files in the repository.
# Isabelle doesn't always ensure that theories are imported with the correct
# directory paths, so we do a separate consistency check here.

# Requires all generated theories to be present.
# In particular, requires theories generated by the Haskell translator and
# the bitfield generator.
# The easiest way to ensure all the necessary theories have been generated
# is to perform this check by running `./run_tests theory_imports` in the
# root of this repository.

set -e
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
ROOT="$SCRIPT_DIR/../.."

# Get all theory files in the repo.
# TODO: This doesn't include any theories in internal.
cd "$ROOT"
THYS=$(git ls-files '*.thy')
if [ $? != 0 ]; then
    echo "Failed to list theory files" >&2
    exit 1
fi

# Whitelist: bare names are ok for Isabelle theory imports.
BUILTINS='-i Pure -i List -i HOL -i Main -i Complex_Main -i GCD'

# Exclude design skeletons, which are stashed in inner directories.
EXCLUDE_THYS='design/(m-)?skel'

# Available architectures
L4V_ARCHS="ARM ARM_HYP X64"
TEST_SUCCEED=true

# Because we don't have an easy way to restrict thydeps to a particular
# architecture, we need to make sure that we have generated arch-specific
# c-kernel theories for all architectures.
for arch in ${L4V_ARCHS}
do
    # Generate CKernel theories
    L4V_ARCH=${arch} make -C spec/ c-kernel
done

# Run thydeps tool. We ignore the usual dependency output (>/dev/null),
# instead using the theory import errors that are printed on stderr.
for arch in ${L4V_ARCHS}
do
    ERRORS=$(
        echo "$THYS" |
        grep -Ev "$EXCLUDE_THYS" |
        L4V_ARCH=${arch} xargs '-d\n' misc/scripts/thydeps $BUILTINS -o /dev/null 2>&1 |
        # Ignore imports from Isabelle distribution.
        grep -Fv 'HOL-Library.' |
        grep -Fv 'HOL-Statespace.' |
        grep -Fv '~~/' ||
        # Discard grep's return code.
        true
    )

    if [ -n "$ERRORS" ]; then
        echo "$ERRORS"
        TEST_SUCCEED=false
    fi
done

${TEST_SUCCEED}
